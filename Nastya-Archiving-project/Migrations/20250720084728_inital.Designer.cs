// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nastya_Archiving_project.Data;

#nullable disable

namespace Nastya_Archiving_project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250720084728_inital")]
    partial class inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Arabic_100_CI_AI_KS_WS_SC")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nastya_Archiving_project.Models.ArcivDocsRefrence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("Dscription")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateOnly?>("EditDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Editor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HeadReferenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LinkedRfrenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PakegId")
                        .HasColumnType("int")
                        .HasColumnName("PakegID");

                    b.HasKey("Id")
                        .HasName("PK_Docs_Refrences");

                    b.ToTable("Arciv_Docs_Refrences", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.ArcivSubDocDscrp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DocTypeId")
                        .HasColumnType("int")
                        .HasColumnName("DocTypeID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Arciv_SubDocDscrp", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.ArcivingDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("BoxfileNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<DateOnly?>("DocDate")
                        .HasColumnType("date");

                    b.Property<int?>("DocId")
                        .HasColumnType("int")
                        .HasColumnName("DocID");

                    b.Property<string>("DocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DocSize")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<int?>("DocSource")
                        .HasColumnType("int");

                    b.Property<int?>("DocTarget")
                        .HasColumnType("int");

                    b.Property<string>("DocTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("DocType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EditDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Editor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("Fourth")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fourth");

                    b.Property<int?>("HaseBakuped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ImgURL");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("IPAddress");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceTo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RefrenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sequre")
                        .HasColumnType("int")
                        .HasColumnName("sequre");

                    b.Property<int?>("SubDocType")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SystemId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SystemID");

                    b.Property<int?>("TheMonth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("(datepart(month,[DocDate]))", false);

                    b.Property<int?>("TheWay")
                        .HasColumnType("int");

                    b.Property<int?>("Theyear")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("theyear")
                        .HasComputedColumnSql("(datepart(year,[DocDate]))", false);

                    b.Property<string>("WordsTosearch")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Arciving_Docs", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.ArcivingDocsDeleted", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("BoxfileNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DocId")
                        .HasColumnType("int")
                        .HasColumnName("DocID");

                    b.Property<string>("DocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("DocSize")
                        .HasColumnType("numeric(10, 2)");

                    b.Property<int?>("DocSource")
                        .HasColumnType("int");

                    b.Property<int?>("DocTarget")
                        .HasColumnType("int");

                    b.Property<string>("DocTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("DocType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EditDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Editor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("Fourth")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("fourth");

                    b.Property<int?>("HaseBakuped")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ImgURL");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("IPAddress");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefrenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Sequre")
                        .HasColumnType("int")
                        .HasColumnName("sequre");

                    b.Property<int?>("SubDocType")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SystemId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SystemID");

                    b.Property<int?>("TheMonth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("(datepart(month,[DocDate]))", false);

                    b.Property<int?>("TheWay")
                        .HasColumnType("int");

                    b.Property<int?>("Theyear")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("theyear")
                        .HasComputedColumnSql("(datepart(year,[DocDate]))", false);

                    b.Property<string>("WordsTosearch")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Arciving_Docs_Deleted", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.Entity.ArcivDocDscrp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsoCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Arciv_DocDscrp", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GeneralOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EnyCript")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EnyCript_");

                    b.Property<string>("Language")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Language_")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.ToTable("GeneralOptions");
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpAccountingUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("gp_AccountingUnits", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(88)
                        .HasColumnType("nvarchar(88)");

                    b.HasKey("Id");

                    b.ToTable("gp_Branches", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpColumnsInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("ControlType")
                        .HasColumnType("int");

                    b.Property<string>("DataType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DscrpA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ParameterTable")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasDefaultValue("-");

                    b.Property<int?>("Required")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("TblName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheSystem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserInserted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id")
                        .HasName("PK_users_ReportColumns");

                    b.ToTable("Gp_ColumnsInfo", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(88)
                        .HasColumnType("nvarchar(88)");

                    b.HasKey("Id");

                    b.ToTable("gp_Departments", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpMonthDscrp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Monthdscrp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("gp_MonthDscrp", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpParametersPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Serials")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("gp_ParametersPages", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpSubDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("gp_SubDepartments", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpSystemImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Img")
                        .HasColumnType("image")
                        .HasColumnName("img");

                    b.HasKey("Id");

                    b.ToTable("Gp_SystemImages", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpSystemImagesP", b =>
                {
                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DscrpA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.ToTable("Gp_SystemImagesP", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GpTablesInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DscrpA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TblType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Table_1");

                    b.ToTable("Gp_TablesInfo", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GtCustomization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DefaultValue")
                        .HasColumnType("int");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<string>("TheTable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheTableA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TheValue")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("gt_Customizations", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.GtCustomizationsP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TheSystem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheTable")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheTableA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("gt_CustomizationsP", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PArciningMainFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StorePath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("P_ArciningMainFolder", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PArcivingPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("BackupPath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StartWith")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StorePath")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("P_ArcivingPoints", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PBlindMail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("P_BlindMail", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PDefaultBody", b =>
                {
                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("P_DefaultBody", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PDocsWay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("P_DocsWay", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PFileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Extention")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("P_FileType", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PJobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("StepId")
                        .HasColumnType("int")
                        .HasColumnName("StepID");

                    b.HasKey("Id");

                    b.ToTable("P_JobTitle", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PMailAdress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("P_MailAdresses", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PMailHost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EMail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("E_Mail");

                    b.Property<string>("EnabledSsl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EnabledSSL");

                    b.Property<string>("Pass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ServerDomen")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ServerPort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("P_MailHosts", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PMailSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK_P_Samples");

                    b.ToTable("P_Mail_Samples", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PNotesSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("P_Notes_Samples", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.POperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("P_Operation", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.POrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("P_Organizations", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.PPackeg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("P_Packegs", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.TDocumentsRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ParentDocId")
                        .HasColumnType("int")
                        .HasColumnName("ParentDocID");

                    b.Property<int?>("RelatedDocId")
                        .HasColumnType("int")
                        .HasColumnName("RelatedDocID");

                    b.HasKey("Id");

                    b.ToTable("T_DocumentsRelations", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.TFileTransferring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("From")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FROM_");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("Readed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("RefrenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime");

                    b.Property<string>("To")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TO_");

                    b.HasKey("Id");

                    b.ToTable("T_FileTransferring", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.TMailArchiving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("BodyStr")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Ccto")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("CCto");

                    b.Property<string>("FileUrl")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FileURL");

                    b.Property<int?>("HostAdress")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("SendDate")
                        .HasColumnType("date");

                    b.Property<string>("SendTo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SenderName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("T_MailArchiving", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.TMailTarget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UsertargetMail")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("usertargetMail");

                    b.HasKey("Id");

                    b.ToTable("T_MailTargets", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.TWritedDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoxfileNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<DateOnly?>("DocDate")
                        .HasColumnType("date");

                    b.Property<string>("DocNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("DocType")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("EditDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Editor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subject")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("TheMonth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasComputedColumnSql("(datepart(month,[DocDate]))", false);

                    b.Property<int?>("Theyear")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("theyear")
                        .HasComputedColumnSql("(datepart(year,[DocDate]))", false);

                    b.HasKey("Id");

                    b.ToTable("T_Writed_Documents", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.TmpCorroptedDocument", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("TheState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TMP_CorroptedDocuments", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("Adminst")
                        .HasMaxLength(172)
                        .HasColumnType("nvarchar(172)")
                        .HasColumnName("adminst");

                    b.Property<int?>("AsWfuser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("AsWFUser");

                    b.Property<int?>("AsmailCenter")
                        .HasColumnType("int")
                        .HasColumnName("ASMailCenter");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("DepariId")
                        .HasColumnType("int")
                        .HasColumnName("DepariID");

                    b.Property<int?>("DevisionId")
                        .HasColumnType("int")
                        .HasColumnName("DevisionID");

                    b.Property<DateOnly?>("EditDate")
                        .HasColumnType("date");

                    b.Property<string>("Editor")
                        .HasMaxLength(172)
                        .HasColumnType("nvarchar(172)");

                    b.Property<int?>("GobStep")
                        .HasColumnType("int");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("GroupID");

                    b.Property<int?>("JobTitle")
                        .HasColumnType("int");

                    b.Property<string>("Permtype")
                        .HasMaxLength(172)
                        .HasColumnType("nvarchar(172)")
                        .HasColumnName("permtype");

                    b.Property<string>("Realname")
                        .HasMaxLength(172)
                        .HasColumnType("nvarchar(172)");

                    b.Property<string>("UserName")
                        .HasMaxLength(172)
                        .HasColumnType("nvarchar(172)");

                    b.Property<string>("UserPassword")
                        .HasMaxLength(172)
                        .HasColumnType("nvarchar(172)");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.UsersArchivingPointsPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("ArchivingpointId")
                        .HasColumnType("int")
                        .HasColumnName("ArchivingpointID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("Users_ArchivingPointsPermissions", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.UsersDoctypePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DoctypeId")
                        .HasColumnType("int")
                        .HasColumnName("DoctypeID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("users_Doctype_Permissions", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.UsersEditing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Editor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ipadress")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IPAdress");

                    b.Property<string>("Model")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("OperationType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RecordData")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("RecordId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("RecordID");

                    b.Property<string>("TblName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TblNameA")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users_Editing", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.UsersFileBrowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FileType")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("Users_FileBrowing", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.UsersOptionPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AddParameters")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("AllowAddToOther")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("AllowDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("AllowDownload")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("AllowSendMail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("AllowViewTheOther")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id");

                    b.ToTable("Users_OptionPermissions", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.UsersPerm", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("PermId")
                        .HasColumnType("int")
                        .HasColumnName("PermID");

                    b.Property<string>("PermType")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable("UsersPerm", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.UsersReportColumn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("Asparameter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("ASParameter");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<string>("ColumnName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ColumnNamedisplay")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ConStr")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ControlType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DataType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DepartmentID");

                    b.Property<string>("JoiningPart")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasDefaultValue("-")
                        .HasColumnName("joiningPart");

                    b.Property<string>("ParameterTable")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValue("-");

                    b.Property<int?>("PrimeryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("Required")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SecondaryKey")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValue("-");

                    b.Property<string>("SecondaryTable")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasDefaultValue("-");

                    b.Property<int?>("Seq")
                        .HasColumnType("int");

                    b.Property<string>("TblName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TblNameA")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TheSystem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserInserted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id")
                        .HasName("PK_users_ReportColumns_1");

                    b.ToTable("users_ReportColumns", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.Usersgroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<DateOnly?>("EditDate")
                        .HasColumnType("date");

                    b.Property<string>("Editor")
                        .HasMaxLength(172)
                        .HasColumnType("nvarchar(172)");

                    b.Property<string>("Groupdscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("groupdscrp");

                    b.HasKey("Id");

                    b.ToTable("usersgroups", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.Usersinterface", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("Outputtype")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("outputtype");

                    b.Property<string>("Pagedscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pagedscrp");

                    b.Property<string>("Pageurl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("pageurl");

                    b.Property<string>("Program")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("program");

                    b.Property<int?>("Serials")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("usersinterfaces", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.Userspermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("Groupid")
                        .HasColumnType("int")
                        .HasColumnName("groupid");

                    b.Property<string>("Pageid")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pageid");

                    b.HasKey("Id");

                    b.ToTable("userspermissions", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.WfPPrecedence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MaxDate")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_P_Precedence");

                    b.ToTable("WF_P_Precedence", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.WfPProcessType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("WF_P_ProcessType", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.WfProcessSequence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Approved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("CaseId")
                        .HasColumnType("int")
                        .HasColumnName("CaseID");

                    b.Property<int?>("CaseSequence")
                        .HasColumnType("int");

                    b.Property<int?>("Cc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("CC");

                    b.Property<int?>("FromUserId")
                        .HasColumnType("int")
                        .HasColumnName("FromUserID");

                    b.Property<string>("FromUserName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Notes")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("OpeninigDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Redirected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Signature")
                        .HasColumnType("image");

                    b.Property<int?>("ToUserId")
                        .HasColumnType("int")
                        .HasColumnName("ToUserID");

                    b.Property<string>("ToUserName")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("UnderHand")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("WF_ProcessSequence", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.WfTArchivingCreatedDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("CaseId")
                        .HasColumnType("int")
                        .HasColumnName("CaseID");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<DateOnly?>("DocDate")
                        .HasColumnType("date");

                    b.Property<int?>("DocId")
                        .HasColumnType("int")
                        .HasColumnName("DocID");

                    b.Property<string>("DocIdtype")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasDefaultValue("_د")
                        .HasColumnName("DocIDType");

                    b.Property<string>("DocNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("EditDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Editor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ImgURL");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("IPAddress");

                    b.Property<int?>("ProcessType")
                        .HasColumnType("int");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int")
                        .HasColumnName("SourceID");

                    b.Property<string>("Subject")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TargetId")
                        .HasColumnType("int")
                        .HasColumnName("TargetID");

                    b.Property<int?>("Themonth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("themonth")
                        .HasComputedColumnSql("(datepart(month,[DocDate]))", false);

                    b.Property<int?>("Theyear")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("theyear")
                        .HasComputedColumnSql("(datepart(year,[DocDate]))", false);

                    b.HasKey("Id")
                        .HasName("PK_Archiving_CreatedDocs");

                    b.ToTable("WF_T_ArchivingCreatedDocs", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.WfTAttached", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CaseId")
                        .HasColumnType("int")
                        .HasColumnName("CaseID");

                    b.Property<int?>("CaseSequence")
                        .HasColumnType("int");

                    b.Property<string>("FileNam")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("ImgURL");

                    b.Property<string>("RefrenceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("Id")
                        .HasName("PK_WF_P_Documents");

                    b.ToTable("WF_T_Attached", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.WfTExportDocNo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<DateOnly?>("EditDate")
                        .HasColumnType("date");

                    b.Property<string>("Editor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExportDocNo")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<int?>("ProcessTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ProcessTypeID");

                    b.Property<int?>("Theyear")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("theyear")
                        .HasComputedColumnSql("(datepart(year,[EditDate]))", false);

                    b.HasKey("Id")
                        .HasName("PK_T_ExportDocNo");

                    b.ToTable("WF_T_ExportDocNo", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.WfTProcessing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("BranchId")
                        .HasColumnType("int")
                        .HasColumnName("BranchID");

                    b.Property<int?>("CaseClosed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("CaseCreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CaseCreatedBY");

                    b.Property<int?>("CaseId")
                        .HasColumnType("int")
                        .HasColumnName("CaseID");

                    b.Property<int?>("CaseTarget")
                        .HasColumnType("int");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<DateOnly?>("DocDate")
                        .HasColumnType("date");

                    b.Property<int?>("DocId")
                        .HasColumnType("int")
                        .HasColumnName("DocID");

                    b.Property<string>("DocNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("DocType")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("PrecedenceId")
                        .HasColumnType("int")
                        .HasColumnName("PrecedenceID");

                    b.Property<int?>("ProcessType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("RefrenceNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Subject")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Themonth")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("themonth")
                        .HasComputedColumnSql("(datepart(month,[DocDate]))", false);

                    b.Property<int?>("Theyear")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("int")
                        .HasColumnName("theyear")
                        .HasComputedColumnSql("(datepart(year,[DocDate]))", false);

                    b.HasKey("Id");

                    b.ToTable("WF_T_Processing", (string)null);
                });

            modelBuilder.Entity("Nastya_Archiving_project.Models.WfTSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountUnitId")
                        .HasColumnType("int")
                        .HasColumnName("AccountUnitID");

                    b.Property<int?>("DepartId")
                        .HasColumnType("int")
                        .HasColumnName("DepartID");

                    b.Property<string>("Dscrp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Structures")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("WF_T_Samples", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
